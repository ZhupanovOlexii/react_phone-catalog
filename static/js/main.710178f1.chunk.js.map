{"version":3,"sources":["components/PlanetCard/PlanetCard.tsx","components/PlanetList/PlanetList.tsx","App.tsx","index.tsx"],"names":["PlanetCard","planet","className","name","id","equatorialRadius","value","unit","surfaceGravity","moons","count","type","PlanetList","planets","map","key","App","useState","query","setQuery","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","sortBy","useMemo","get","sortOrder","filteredPlanets","filter","atmosphericConstituents","list","toLowerCase","includes","trim","sort","a","b","localeCompare","reverse","placeholder","onChange","event","target","sortField","onClick","set","push","toString","sortingBy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.710178f1.chunk.js","sourcesContent":["import React from 'react';\nimport './PlanetCard.scss';\n// import PlanetDetails from '../PlanetDetails/PlanetDetails';\n\ntype Props = {\n  planet: Planet;\n};\n\nconst PlanetCard: React.FC<Props> = ({ planet }) => {\n  //   const [info, setInfo] = useState('');\n\n  // const getDetailInfo = (planet: Planet) => {\n  //      setInfo(planet.description)\n  // };\n\n  return (\n    <>\n\n      <div className=\"PlanetCard__list\">\n        <div className=\"PlanetCard__info\">\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Name\n              {' '}\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.name}\n            </p>\n          </div>\n\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Id\n              {' '}\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.id}\n            </p>\n          </div>\n\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Radius\n              {' '}\n\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.equatorialRadius.value}\n              {planet.equatorialRadius.unit}\n            </p>\n          </div>\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              Gravity\n              {' '}\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.surfaceGravity.value}\n              {planet.surfaceGravity.unit}\n            </p>\n          </div>\n          <div className=\"PlanetCard__description\">\n            <p className=\"PlanetCard__title\">\n              moons\n              {' '}\n            </p>\n            <p className=\"PlanetCard__value\">\n              {planet.moons?.count}\n            </p>\n          </div>\n\n        </div>\n\n        <div className=\"PlanetCard__button\">\n          <button\n            className=\"PlanetCard__button--info\"\n            type=\"button\"\n          >\n            More info\n          </button>\n        </div>\n\n        {/* <PlanetDetails info={info}/> */}\n      </div>\n\n    </>\n  );\n};\n\nexport default PlanetCard;\n","import React from 'react';\nimport PlanetCard from '../PlanetCard/PlanetCard';\n\ntype Props = {\n  planets: Planet[];\n};\n\nconst PlanetList: React.FC<Props> = ({ planets }) => {\n  return (\n    <>\n      <div className=\"PlanetCard\">\n        {planets.map(planet => (\n          <PlanetCard key={planet.id} planet={planet} />\n        ))}\n\n      </div>\n\n    </>\n  );\n};\n\nexport default PlanetList;\n","// import React, { useState, useEffect } from 'react';\nimport React, { useState, useMemo } from 'react';\n\nimport './App.scss';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport planets from './api/data_for_test.json';\nimport PlanetList from './components/PlanetList/PlanetList';\n\n// import PlanetDetails from './components/PlanetDetails/PlanetDetails';\n// import { getPlanets } from './helpers/api';\n\n// type Props = {\n//   planets:Planet[];\n// }\n\nconst App = () => {\n  const [query, setQuery] = useState('');\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = useMemo(() => searchParams.get('sortBy') || '', [searchParams]);\n  const sortOrder = useMemo(() => searchParams.get('sortOrder') || '', [searchParams]);\n  // const [sortField,setSortField]=useState('name')\n  // const isReversed=true;\n\n  const SORT_OPTIONS = ['name', 'equatorialRadius', 'moons'];\n\n  const searchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.target.value;\n\n    setQuery(target);\n  };\n\n  const filteredPlanets = useMemo(() => planets.filter(planet => {\n    return (planet.name + planet.atmosphericConstituents.list + planet.id)\n      .toLowerCase().includes(query.trim().toLowerCase());\n  }), [query]);\n\n  const sortingBy = (sortField: string) => {\n    if (sortBy === sortField && sortOrder === 'asc') {\n      searchParams.set('sortOrder', 'desc');\n    } else {\n      searchParams.set('sortOrder', 'asc');\n    }\n\n    searchParams.set('sortBy', sortField);\n    history.push({\n      search: searchParams.toString(),\n    });\n  };\n\n  useMemo(() => {\n    switch (sortOrder) {\n      case 'asc':\n        switch (sortBy) {\n          case 'name':\n            filteredPlanets.sort((a, b) => b.name.localeCompare(a.name));\n            break;\n\n          case 'equatorialRadius':\n            filteredPlanets.sort((a, b) => b.equatorialRadius.value - a.equatorialRadius.value);\n            break;\n\n          case 'moons':\n            filteredPlanets.sort((a: Planet, b: Planet) => b.moons.count - a.moons.count);\n            break;\n\n          default: filteredPlanets.sort((a, b) => b.name.localeCompare(a.name));\n        }\n\n        break;\n      case 'desc':\n        filteredPlanets.reverse();\n        break;\n      default: filteredPlanets.sort((a, b) => a.name.localeCompare(b.name));\n    }\n  }, [filteredPlanets, sortBy, sortOrder]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"input\">\n        <input\n          type=\"text-area\"\n          className=\"input__value\"\n          placeholder=\"what you search\"\n          onChange={searchQuery}\n        />\n      </div>\n      <div className=\"button\">\n        {SORT_OPTIONS.map(sortField => (\n          <button\n            type=\"button\"\n            className=\"button__sort\"\n            onClick={() => sortingBy(sortField)}\n          >\n            {sortField}\n          </button>\n        ))}\n      </div>\n\n      <PlanetList planets={filteredPlanets} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}